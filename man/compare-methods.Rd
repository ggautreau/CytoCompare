% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compare.R
\docType{methods}
\name{compare}
\alias{compare}
\alias{compare,CELL,CELL-method}
\alias{compare,CELL,CLUSTER-method}
\alias{compare,CELL,GATE-method}
\alias{compare,CELL,missing-method}
\alias{compare,CLUSTER,CELL-method}
\alias{compare,CLUSTER,CLUSTER-method}
\alias{compare,CLUSTER,GATE-method}
\alias{compare,CLUSTER,missing-method}
\alias{compare,GATE,CELL-method}
\alias{compare,GATE,CLUSTER-method}
\alias{compare,GATE,GATE-method}
\alias{compare,GATE,missing-method}
\title{Compare two cytometry profiles.}
\usage{
compare(object1, object2, ...)

\S4method{compare}{CELL,missing}(object1, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{CLUSTER,missing}(object1, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{GATE,missing}(object1, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{CELL,CELL}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{CLUSTER,CLUSTER}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{GATE,GATE}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{CELL,CLUSTER}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{CLUSTER,CELL}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{CELL,GATE}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{GATE,CELL}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{CLUSTER,GATE}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)

\S4method{compare}{GATE,CLUSTER}(object1, object2, mweights = NULL,
  method = "compare_default", method.params = NULL)
}
\arguments{
\item{object1}{a CELL, CLUSTER or GATE object}

\item{object2}{a CELL, CLUSTER or GATE object}

\item{...}{other parameters}

\item{mweights}{a MWEIGHTS object specifying the markers to use in the comparison procedure with theirs associated weights}

\item{method}{a function or a character specifying the name of a function to use when performing the statistical comparisons between the cytometry profiles}

\item{method.params}{a named character list used to parametrize the comparison function (please see the details section)}
}
\value{
a S4 object of class RES
}
\description{
Cytometry profiles contained in CELL, CLUSTER, or GATE objects can be compared using the `compare()` function. Comparison results are stored in a RES object. Comparisons can be performed between profiles of same types or between profiles of different types:\cr
* in the default statistical approach, if the comparisons are performed on profiles of same type then profiles will be compared to identify similar profiles\cr
* in the default statistical approach, if the comparisons are performed on profiles of different types then profiles will be compared to identify included profiles

For each comparison of two cytometry profiles, a similarity or an inclusion measure is provided as well as a p-value asserting the statistical significance of the similarity or inclusion. A similarity or inclusion measure is calculated for each marker of the profiles to compare. Different measures are used depending of the types of profiles to compare (please refer to the details section). An aggregated similarity or inclusion measure is computed based on the weighted sum of marker measures. Then, each marker having a measure below a specific threshold models a similarity or inclusion success, and a weighted binomial test provides the significance of the proportion of similar or included markers.

Comparisons can be performed based on the whole set of common markers between the two profiles, or based on a subset of markers specified by the user. Moreover, markers can be weighted in the comparison procedure, via a MWEIGHTS object.

If only one object is provided to the `compare()` function then the comparisons will be performed between all profiles of this object. If two objects are provided to the `compare()` function then the comparisons will be performed between all possible pairs of profiles between these two objects.

Importantly, users can define their own function to perform the statistical comparisons of the profiles, using the `method` parameter.
}
\details{
Different parameters can be defined, via the method.params named character list, to specify the behaviour of the such kind of comparisons:\cr
* the success.th parameter indicates the similarity or inclusion threshold\cr
* the success.p parameter indicates the expected proportion of marker successes\cr
* the nbcells.th parameter indicates the number of cells per cluster below which the marker expression density of a cell cluster profile will be approximated by a normal distribution\cr
* the cluster.quantiles parameter indicates the quantiles that will define the marker expression ranges for the cell cluster profile 

In the case of comparisons between cell profiles, the marker similarity measures are calculated based on the Euclidean distance. The parameter success.th is set to 0.20 by default and the parameter success.p is set to 0.75 default. 

In the case of comparisons between cell cluster profiles, the marker similarity measures are calculated based on the Kolmogorov-Smirnov distance. The parameter success.th is set to 0.30 by default and the parameter success.p is set to 0.75 default. The nbcells.th parameter indicates the number of cells per cluster below which the density will be approximated by a normal distribution (set to 50 by default)

In the case of comparisons between gate profiles, gates are modeled by uniform distributions, and the marker similarity measures are calculated based on the Kolmogorov-Smirnov distance. The parameter success.th is set to 0.30 by default and the parameter success.p is set to 0.75 default.

In the case of comparisons between cell profiles and gate profiles, the marker inclusion measures are defined as the minimal distances between the cell expression and the gate ranges. The marker inclusion measures are equals to zero if the cell marker expressions are included in the gate marker ranges. The parameter success.th is set to 0.10 by default and the parameter success.p is set to 0.75 default.

In the case of comparisons between cell cluster profiles and cluster profiles, the marker inclusion measures are defined as the minimal distances between the cell expressions and the cell cluster ranges. The marker inclusion measures are equals to zero if the cell marker expressions are included in the cell cluster marker ranges. The parameter success.th is set to 0.10 by default and the parameter success.p is set to 0.75 default. The cluster.quantiles parameter indicates the quantiles that will define the marker expression ranges for the cell cluster profile (set to 0.10 and 0.90 by default).

In the case of comparisons between cell cluster profiles and gate profiles, the inclusion measures used are equals to the maximal absolute distances between the cluster and gate lower bounds and the cluster and gate upper bounds. The inclusion measures are equals to zero if the cell cluster marker expressions are included in the gate marker ranges. The parameter success.th is set to 0.10 by default and the parameter success.p is set to 0.75 default. The cluster.quantiles parameter indicates the quantiles that will define the marker expression ranges for the cell cluster profile (set to 0.10 and 0.90 by default).
}

